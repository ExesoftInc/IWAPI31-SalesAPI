// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using SalesAPI.Entities;
using SalesAPI.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SalesAPI.Models {
    
    
    public class CustomerModel {
        
        protected internal int _customerID;
        
        protected internal int? _personID;
        
        protected internal int? _storeID;
        
        protected internal int? _territoryID;
        
        protected internal string _accountNumber;
        
        protected internal System.Guid _rowguid;
        
        protected internal System.DateTime _modifiedDate;
        
        public CustomerModel() {
        }
        
        internal CustomerModel(Customer entity) {
            this._customerID = entity.CustomerID;
            this._personID = entity.PersonID;
            this._storeID = entity.StoreID;
            this._territoryID = entity.TerritoryID;
            _accountNumber = entity.AccountNumber;
            _rowguid = entity.Rowguid;
            this._modifiedDate = entity.ModifiedDate;
        }
        
        [Display(Name = "Customer ID")]
        public int CustomerID {
            get {
                return this._customerID;
            }
            set {
                this._customerID = value;
            }
        }
        
        [Display(Name = "Person ID")]
        public int? PersonID {
            get {
                return this._personID;
            }
            set {
                this._personID = value;
            }
        }
        
        [Display(Name = "Store ID")]
        public int? StoreID {
            get {
                return this._storeID;
            }
            set {
                this._storeID = value;
            }
        }
        
        [Display(Name = "Territory ID")]
        public int? TerritoryID {
            get {
                return this._territoryID;
            }
            set {
                this._territoryID = value;
            }
        }
        
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Account number")]
        public string AccountNumber {
            get {
                return this._accountNumber;
            }
        }
        
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid {
            get {
                return this._rowguid;
            }
        }
        
        [Required()]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate {
            get {
                return this._modifiedDate;
            }
            set {
                this._modifiedDate = value;
            }
        }
        
        /// Child SalesOrderHeaders where [SalesOrderHeader].[CustomerID] point to this entity (FK_SalesOrderHeader_Customer_CustomerID)
        public virtual ICollection<SalesOrderHeaderModel> SalesOrderHeadersModel { get; set; } = new HashSet<SalesOrderHeaderModel>();
        
        public override int GetHashCode() {
            int hash = 0;
            hash ^=Rowguid.GetHashCode();
            return hash;
        }
        
        public override string ToString() {
            return GetHashCode().ToString();
        }
        
        public override bool Equals(object obj) {
        bool result = false;

            if (obj is CustomerModel) {
                CustomerModel toCompare = (CustomerModel)obj;
              if(toCompare != null)
              {
                  result = Equals(toCompare);
              }
            }

            return result;
        }
        
        public virtual bool Equals(CustomerModel toCompare) {

        bool result = false;

            if (toCompare != null) {
                result = toCompare.PersonID.Equals(PersonID)
             && toCompare.StoreID.Equals(StoreID)
             && toCompare.TerritoryID.Equals(TerritoryID)
;
            }

            return result;
        }
    }
}

