// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using SalesAPI.Entities;
using SalesAPI.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SalesAPI.Models {
    
    
    public class SalesPersonModel {
        
        protected internal int _businessEntityID;
        
        protected internal int? _territoryID;
        
        protected internal decimal? _salesQuota;
        
        protected internal decimal _bonus;
        
        protected internal decimal _commissionPct;
        
        protected internal decimal _salesYTD;
        
        protected internal decimal _salesLastYear;
        
        protected internal System.Guid _rowguid;
        
        protected internal System.DateTime _modifiedDate;
        
        public SalesPersonModel() {
        }
        
        internal SalesPersonModel(SalesPerson entity) {
            this._businessEntityID = entity.BusinessEntityID;
            this._territoryID = entity.TerritoryID;
            this._salesQuota = entity.SalesQuota;
            this._bonus = entity.Bonus;
            this._commissionPct = entity.CommissionPct;
            this._salesYTD = entity.SalesYTD;
            this._salesLastYear = entity.SalesLastYear;
            _rowguid = entity.Rowguid;
            this._modifiedDate = entity.ModifiedDate;
        }
        
        [Required()]
        [Display(Name = "Business entity ID")]
        public int BusinessEntityID {
            get {
                return this._businessEntityID;
            }
            set {
                this._businessEntityID = value;
            }
        }
        
        [Display(Name = "Territory ID")]
        public int? TerritoryID {
            get {
                return this._territoryID;
            }
            set {
                this._territoryID = value;
            }
        }
        
        [DataType(DataType.Currency)]
        [Display(Name = "Sales quota")]
        public decimal? SalesQuota {
            get {
                return this._salesQuota;
            }
            set {
                this._salesQuota = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Bonus")]
        public decimal Bonus {
            get {
                return this._bonus;
            }
            set {
                this._bonus = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Commission pct")]
        public decimal CommissionPct {
            get {
                return this._commissionPct;
            }
            set {
                this._commissionPct = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Sales ytd")]
        public decimal SalesYTD {
            get {
                return this._salesYTD;
            }
            set {
                this._salesYTD = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Sales last year")]
        public decimal SalesLastYear {
            get {
                return this._salesLastYear;
            }
            set {
                this._salesLastYear = value;
            }
        }
        
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid {
            get {
                return this._rowguid;
            }
        }
        
        [Required()]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate {
            get {
                return this._modifiedDate;
            }
            set {
                this._modifiedDate = value;
            }
        }
        
        /// Child SalesOrderHeaders where [SalesOrderHeader].[SalesPersonID] point to this entity (FK_SalesOrderHeader_SalesPerson_SalesPersonID)
        public virtual ICollection<SalesOrderHeaderModel> SalesOrderHeadersModel { get; set; } = new HashSet<SalesOrderHeaderModel>();
        
        /// Child SalesPersonQuotaHistories where [SalesPersonQuotaHistory].[BusinessEntityID] point to this entity (FK_SalesPersonQuotaHistory_SalesPerson_BusinessEntityID)
        public virtual ICollection<SalesPersonQuotaHistoryModel> SalesPersonQuotaHistoriesModel { get; set; } = new HashSet<SalesPersonQuotaHistoryModel>();
        
        /// Child SalesTerritoryHistories where [SalesTerritoryHistory].[BusinessEntityID] point to this entity (FK_SalesTerritoryHistory_SalesPerson_BusinessEntityID)
        public virtual ICollection<SalesTerritoryHistoryModel> SalesTerritoryHistoriesModel { get; set; } = new HashSet<SalesTerritoryHistoryModel>();
        
        /// Child Stores where [Store].[SalesPersonID] point to this entity (FK_Store_SalesPerson_SalesPersonID)
        public virtual ICollection<StoreModel> StoresModel { get; set; } = new HashSet<StoreModel>();
        
        public override int GetHashCode() {
            int hash = 0;
            hash ^=BusinessEntityID.GetHashCode();
            return hash;
        }
        
        public override string ToString() {
            return BusinessEntityID.ToString()
;
        }
        
        public override bool Equals(object obj) {
        bool result = false;

            if (obj is SalesPersonModel) {
                SalesPersonModel toCompare = (SalesPersonModel)obj;
              if(toCompare != null)
              {
                  result = Equals(toCompare);
              }
            }

            return result;
        }
        
        public virtual bool Equals(SalesPersonModel toCompare) {

        bool result = false;

            if (toCompare != null) {
                result = toCompare.BusinessEntityID == BusinessEntityID
;
            }

            return result;
        }
    }
}

