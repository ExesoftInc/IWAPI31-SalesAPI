// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using SalesAPI.Entities;
using SalesAPI.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SalesAPI.Entities {
    
    
    public static class ModelExtender {
        
        public static CountryRegionCurrency ToEntity(this CountryRegionCurrencyModel model, CountryRegionCurrency entity) {

            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static CreditCard ToEntity(this CreditCardModel model, CreditCard entity) {

            entity.CardType = model.CardType;
            entity.CardNumber = model.CardNumber;
            entity.ExpMonth = model.ExpMonth;
            entity.ExpYear = model.ExpYear;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static Currency ToEntity(this CurrencyModel model, Currency entity) {

            entity.Name = model.Name;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static CurrencyRate ToEntity(this CurrencyRateModel model, CurrencyRate entity) {

            entity.CurrencyRateDate = model.CurrencyRateDate;
            entity.FromCurrencyCode = model.FromCurrencyCode;
            entity.ToCurrencyCode = model.ToCurrencyCode;
            entity.AverageRate = model.AverageRate;
            entity.EndOfDayRate = model.EndOfDayRate;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static Customer ToEntity(this CustomerModel model, Customer entity) {

            entity.PersonID = model.PersonID;
            entity.StoreID = model.StoreID;
            entity.TerritoryID = model.TerritoryID;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static PersonCreditCard ToEntity(this PersonCreditCardModel model, PersonCreditCard entity) {

            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesOrderDetail ToEntity(this SalesOrderDetailModel model, SalesOrderDetail entity) {

            entity.CarrierTrackingNumber = model.CarrierTrackingNumber;
            entity.OrderQty = model.OrderQty;
            entity.ProductID = model.ProductID;
            entity.SpecialOfferID = model.SpecialOfferID;
            entity.UnitPrice = model.UnitPrice;
            entity.UnitPriceDiscount = model.UnitPriceDiscount;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesOrderHeader ToEntity(this SalesOrderHeaderModel model, SalesOrderHeader entity) {

            entity.RevisionNumber = model.RevisionNumber;
            entity.OrderDate = model.OrderDate;
            entity.DueDate = model.DueDate;
            entity.ShipDate = model.ShipDate;
            entity.Status = model.Status;
            entity.OnlineOrderFlag = model.OnlineOrderFlag;
            entity.PurchaseOrderNumber = model.PurchaseOrderNumber;
            entity.AccountNumber = model.AccountNumber;
            entity.CustomerID = model.CustomerID;
            entity.SalesPersonID = model.SalesPersonID;
            entity.TerritoryID = model.TerritoryID;
            entity.BillToAddressID = model.BillToAddressID;
            entity.ShipToAddressID = model.ShipToAddressID;
            entity.ShipMethodID = model.ShipMethodID;
            entity.CreditCardID = model.CreditCardID;
            entity.CreditCardApprovalCode = model.CreditCardApprovalCode;
            entity.CurrencyRateID = model.CurrencyRateID;
            entity.SubTotal = model.SubTotal;
            entity.TaxAmt = model.TaxAmt;
            entity.Freight = model.Freight;
            entity.Comment = model.Comment;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesOrderHeaderSalesReason ToEntity(this SalesOrderHeaderSalesReasonModel model, SalesOrderHeaderSalesReason entity) {

            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesPerson ToEntity(this SalesPersonModel model, SalesPerson entity) {

            entity.TerritoryID = model.TerritoryID;
            entity.SalesQuota = model.SalesQuota;
            entity.Bonus = model.Bonus;
            entity.CommissionPct = model.CommissionPct;
            entity.SalesYTD = model.SalesYTD;
            entity.SalesLastYear = model.SalesLastYear;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesPersonQuotaHistory ToEntity(this SalesPersonQuotaHistoryModel model, SalesPersonQuotaHistory entity) {

            entity.SalesQuota = model.SalesQuota;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesReason ToEntity(this SalesReasonModel model, SalesReason entity) {

            entity.Name = model.Name;
            entity.ReasonType = model.ReasonType;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesTaxRate ToEntity(this SalesTaxRateModel model, SalesTaxRate entity) {

            entity.StateProvinceID = model.StateProvinceID;
            entity.TaxType = model.TaxType;
            entity.TaxRate = model.TaxRate;
            entity.Name = model.Name;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesTerritory ToEntity(this SalesTerritoryModel model, SalesTerritory entity) {

            entity.Name = model.Name;
            entity.CountryRegionCode = model.CountryRegionCode;
            entity.Group = model.Group;
            entity.SalesYTD = model.SalesYTD;
            entity.SalesLastYear = model.SalesLastYear;
            entity.CostYTD = model.CostYTD;
            entity.CostLastYear = model.CostLastYear;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SalesTerritoryHistory ToEntity(this SalesTerritoryHistoryModel model, SalesTerritoryHistory entity) {

            entity.EndDate = model.EndDate;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static ShoppingCartItem ToEntity(this ShoppingCartItemModel model, ShoppingCartItem entity) {

            entity.ShoppingCartID = model.ShoppingCartID;
            entity.Quantity = model.Quantity;
            entity.ProductID = model.ProductID;
            entity.DateCreated = model.DateCreated;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SpecialOffer ToEntity(this SpecialOfferModel model, SpecialOffer entity) {

            entity.Description = model.Description;
            entity.DiscountPct = model.DiscountPct;
            entity.Type = model.Type;
            entity.Category = model.Category;
            entity.StartDate = model.StartDate;
            entity.EndDate = model.EndDate;
            entity.MinQty = model.MinQty;
            entity.MaxQty = model.MaxQty;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static SpecialOfferProduct ToEntity(this SpecialOfferProductModel model, SpecialOfferProduct entity) {

            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
        
        public static Store ToEntity(this StoreModel model, Store entity) {

            entity.Name = model.Name;
            entity.SalesPersonID = model.SalesPersonID;
            entity.Demographics = model.Demographics;
            entity.ModifiedDate = model.ModifiedDate;

            return entity;
        }
    }
}

