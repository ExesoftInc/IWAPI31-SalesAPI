// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using SalesAPI.Entities;
using SalesAPI.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SalesAPI.Models {
    
    
    public class CreditCardModel {
        
        protected internal int _creditCardID;
        
        protected internal string _cardType;
        
        protected internal string _cardNumber;
        
        protected internal byte _expMonth;
        
        protected internal short _expYear;
        
        protected internal System.DateTime _modifiedDate;
        
        public CreditCardModel() {
        }
        
        internal CreditCardModel(CreditCard entity) {
            this._creditCardID = entity.CreditCardID;
            this._cardType = entity.CardType;
            this._cardNumber = entity.CardNumber;
            this._expMonth = entity.ExpMonth;
            this._expYear = entity.ExpYear;
            this._modifiedDate = entity.ModifiedDate;
        }
        
        [Display(Name = "Credit card ID")]
        public int CreditCardID {
            get {
                return this._creditCardID;
            }
            set {
                this._creditCardID = value;
            }
        }
        
        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Card type")]
        public string CardType {
            get {
                return this._cardType;
            }
            set {
                this._cardType = value;
            }
        }
        
        [Required()]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Card number")]
        public string CardNumber {
            get {
                return this._cardNumber;
            }
            set {
                this._cardNumber = value;
            }
        }
        
        [Required()]
        [Display(Name = "Exp month")]
        public byte ExpMonth {
            get {
                return this._expMonth;
            }
            set {
                this._expMonth = value;
            }
        }
        
        [Required()]
        [Display(Name = "Exp year")]
        public short ExpYear {
            get {
                return this._expYear;
            }
            set {
                this._expYear = value;
            }
        }
        
        [Required()]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate {
            get {
                return this._modifiedDate;
            }
            set {
                this._modifiedDate = value;
            }
        }
        
        /// Child PersonCreditCards where [PersonCreditCard].[CreditCardID] point to this entity (FK_PersonCreditCard_CreditCard_CreditCardID)
        public virtual ICollection<PersonCreditCardModel> PersonCreditCardsModel { get; set; } = new HashSet<PersonCreditCardModel>();
        
        /// Child SalesOrderHeaders where [SalesOrderHeader].[CreditCardID] point to this entity (FK_SalesOrderHeader_CreditCard_CreditCardID)
        public virtual ICollection<SalesOrderHeaderModel> SalesOrderHeadersModel { get; set; } = new HashSet<SalesOrderHeaderModel>();
        
        public override int GetHashCode() {
            int hash = 0;
            hash ^=CardNumber.GetHashCode();
            return hash;
        }
        
        public override string ToString() {
            return CardNumber
;
        }
        
        public override bool Equals(object obj) {
        bool result = false;

            if (obj is CreditCardModel) {
                CreditCardModel toCompare = (CreditCardModel)obj;
              if(toCompare != null)
              {
                  result = Equals(toCompare);
              }
            }

            return result;
        }
        
        public virtual bool Equals(CreditCardModel toCompare) {

        bool result = false;

            if (toCompare != null) {
                result = string.Compare(toCompare.CardNumber, CardNumber, true) == 0
;
            }

            return result;
        }
    }
}

