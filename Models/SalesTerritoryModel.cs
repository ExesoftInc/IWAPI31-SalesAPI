// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using SalesAPI.Entities;
using SalesAPI.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SalesAPI.Models {
    
    
    public class SalesTerritoryModel {
        
        protected internal int _territoryID;
        
        protected internal string _name;
        
        protected internal string _countryRegionCode;
        
        protected internal string _group;
        
        protected internal decimal _salesYTD;
        
        protected internal decimal _salesLastYear;
        
        protected internal decimal _costYTD;
        
        protected internal decimal _costLastYear;
        
        protected internal System.Guid _rowguid;
        
        protected internal System.DateTime _modifiedDate;
        
        public SalesTerritoryModel() {
        }
        
        internal SalesTerritoryModel(SalesTerritory entity) {
            this._territoryID = entity.TerritoryID;
            this._name = entity.Name;
            this._countryRegionCode = entity.CountryRegionCode;
            this._group = entity.Group;
            this._salesYTD = entity.SalesYTD;
            this._salesLastYear = entity.SalesLastYear;
            this._costYTD = entity.CostYTD;
            this._costLastYear = entity.CostLastYear;
            _rowguid = entity.Rowguid;
            this._modifiedDate = entity.ModifiedDate;
        }
        
        [Display(Name = "Territory ID")]
        public int TerritoryID {
            get {
                return this._territoryID;
            }
            set {
                this._territoryID = value;
            }
        }
        
        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        [Required()]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Country region code")]
        public string CountryRegionCode {
            get {
                return this._countryRegionCode;
            }
            set {
                this._countryRegionCode = value;
            }
        }
        
        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Group")]
        public string Group {
            get {
                return this._group;
            }
            set {
                this._group = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Sales ytd")]
        public decimal SalesYTD {
            get {
                return this._salesYTD;
            }
            set {
                this._salesYTD = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Sales last year")]
        public decimal SalesLastYear {
            get {
                return this._salesLastYear;
            }
            set {
                this._salesLastYear = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Cost ytd")]
        public decimal CostYTD {
            get {
                return this._costYTD;
            }
            set {
                this._costYTD = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Cost last year")]
        public decimal CostLastYear {
            get {
                return this._costLastYear;
            }
            set {
                this._costLastYear = value;
            }
        }
        
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid {
            get {
                return this._rowguid;
            }
        }
        
        [Required()]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate {
            get {
                return this._modifiedDate;
            }
            set {
                this._modifiedDate = value;
            }
        }
        
        /// Child Customers where [Customer].[TerritoryID] point to this entity (FK_Customer_SalesTerritory_TerritoryID)
        public virtual ICollection<CustomerModel> CustomersModel { get; set; } = new HashSet<CustomerModel>();
        
        /// Child SalesOrderHeaders where [SalesOrderHeader].[TerritoryID] point to this entity (FK_SalesOrderHeader_SalesTerritory_TerritoryID)
        public virtual ICollection<SalesOrderHeaderModel> SalesOrderHeadersModel { get; set; } = new HashSet<SalesOrderHeaderModel>();
        
        /// Child SalesPersons where [SalesPerson].[TerritoryID] point to this entity (FK_SalesPerson_SalesTerritory_TerritoryID)
        public virtual ICollection<SalesPersonModel> SalesPersonsModel { get; set; } = new HashSet<SalesPersonModel>();
        
        /// Child SalesTerritoryHistories where [SalesTerritoryHistory].[TerritoryID] point to this entity (FK_SalesTerritoryHistory_SalesTerritory_TerritoryID)
        public virtual ICollection<SalesTerritoryHistoryModel> SalesTerritoryHistoriesModel { get; set; } = new HashSet<SalesTerritoryHistoryModel>();
        
        public override int GetHashCode() {
            int hash = 0;
            hash ^=Name.GetHashCode();
            return hash;
        }
        
        public override string ToString() {
            return Name
;
        }
        
        public override bool Equals(object obj) {
        bool result = false;

            if (obj is SalesTerritoryModel) {
                SalesTerritoryModel toCompare = (SalesTerritoryModel)obj;
              if(toCompare != null)
              {
                  result = Equals(toCompare);
              }
            }

            return result;
        }
        
        public virtual bool Equals(SalesTerritoryModel toCompare) {

        bool result = false;

            if (toCompare != null) {
                result = string.Compare(toCompare.Name, Name, true) == 0
;
            }

            return result;
        }
    }
}

