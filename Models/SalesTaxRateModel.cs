// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using SalesAPI.Entities;
using SalesAPI.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace SalesAPI.Models {
    
    
    public class SalesTaxRateModel {
        
        protected internal int _salesTaxRateID;
        
        protected internal int _stateProvinceID;
        
        protected internal byte _taxType;
        
        protected internal decimal _taxRate;
        
        protected internal string _name;
        
        protected internal System.Guid _rowguid;
        
        protected internal System.DateTime _modifiedDate;
        
        public SalesTaxRateModel() {
        }
        
        internal SalesTaxRateModel(SalesTaxRate entity) {
            this._salesTaxRateID = entity.SalesTaxRateID;
            this._stateProvinceID = entity.StateProvinceID;
            this._taxType = entity.TaxType;
            this._taxRate = entity.TaxRate;
            this._name = entity.Name;
            _rowguid = entity.Rowguid;
            this._modifiedDate = entity.ModifiedDate;
        }
        
        [Display(Name = "Sales tax rate ID")]
        public int SalesTaxRateID {
            get {
                return this._salesTaxRateID;
            }
            set {
                this._salesTaxRateID = value;
            }
        }
        
        [Required()]
        [Display(Name = "State province ID")]
        public int StateProvinceID {
            get {
                return this._stateProvinceID;
            }
            set {
                this._stateProvinceID = value;
            }
        }
        
        [Required()]
        [Display(Name = "Tax type")]
        public byte TaxType {
            get {
                return this._taxType;
            }
            set {
                this._taxType = value;
            }
        }
        
        [Required()]
        [DataType(DataType.Currency)]
        [Display(Name = "Tax rate")]
        public decimal TaxRate {
            get {
                return this._taxRate;
            }
            set {
                this._taxRate = value;
            }
        }
        
        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        [Display(Name = "Rowguid")]
        public System.Guid Rowguid {
            get {
                return this._rowguid;
            }
        }
        
        [Required()]
        [DataType(DataType.DateTime)]
        [Display(Name = "Modified date")]
        public System.DateTime ModifiedDate {
            get {
                return this._modifiedDate;
            }
            set {
                this._modifiedDate = value;
            }
        }
        
        public override int GetHashCode() {
            int hash = 0;
            hash ^=StateProvinceID.GetHashCode();
            hash ^=TaxType.GetHashCode();
            return hash;
        }
        
        public override string ToString() {
            return StateProvinceID.ToString()
                 + "-" + TaxType.ToString()
;
        }
        
        public override bool Equals(object obj) {
        bool result = false;

            if (obj is SalesTaxRateModel) {
                SalesTaxRateModel toCompare = (SalesTaxRateModel)obj;
              if(toCompare != null)
              {
                  result = Equals(toCompare);
              }
            }

            return result;
        }
        
        public virtual bool Equals(SalesTaxRateModel toCompare) {

        bool result = false;

            if (toCompare != null) {
                result = toCompare.StateProvinceID == StateProvinceID
             && toCompare.TaxType == TaxType
;
            }

            return result;
        }
    }
}

